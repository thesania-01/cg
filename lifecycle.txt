activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <Button
 android:text="Second Activity"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
android:layout_alignParentStart="true"
 android:layout_alignParentTop="true" android:id="@+id/btnSecond"
android:layout_marginTop="73dp"
 android:layout_marginStart="105dp"/>
 <Button
 android:id="@+id/btnFragment"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignParentStart="true"
 android:layout_alignParentTop="true"
 android:layout_marginStart="103dp"
 android:layout_marginTop="178dp"
android:text="Open Fragment" />
 <FrameLayout
 android:id="@+id/framelayout"
 android:layout_width="361dp"
 android:layout_height="461dp"
 android:layout_alignParentEnd="true"
 android:layout_below="@id/btnFragment"
 android:layout_marginEnd="50dp"
 android:layout_marginTop="42dp">
 </FrameLayout>
</RelativeLayout>

activity_second.xml

<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".SecondActivity">
 <TextView
 android:id="@+id/textView2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="This is Second Activity"
 tools:layout_editor_absoluteX="122dp"
 tools:layout_editor_absoluteY="230dp" />
</android.support.constraint.ConstraintLayout>

fragment_life_of.xml

<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".LifeOfFragment">
 <!-- TODO: Update blank fragment layout -->
 <TextView
 android:layout_width="239dp"
 android:layout_height="wrap_content"
 android:text="This is my fragment" />
</FrameLayout>

MainActivity.kt

package com.example.admin.typract3
import android.content.Intent
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import kotlinx.android.synthetic.main.activity_main.*
class MainActivity : AppCompatActivity() {
val TAG = "Activity Lifecycle"
 override fun onCreate(savedInstanceState: Bundle?) {
 super.onCreate(savedInstanceState)
 setContentView(R.layout.activity_main)
val btnSecondActivity=findViewById<Button>(R.id.btnSecondActivity)
 btnSecond.setOnClickListener {
 val intent = Intent(this, SecondActivity::class.java)
 startActivity(intent)
 }

btnFragment.setOnClickListener{
 val fm=supportFragmentManager
 val fragment: Fragment
 fragment=MyFragment()
 fm.beginTransaction()
 .replace(R.id.framelayout,fragment)
 .commit()
}
 Log.i(TAG,"In the onCreate event")
 }
 override fun onStart() {
 super.onStart()
 Log.i(TAG,"In the onStart event")
 }
 override fun onRestart() {
 super.onRestart()
 Log.i(TAG,"In the onRestart event")
 }
 override fun onResume() {
 super.onResume()
 Log.i(TAG,"In the onResume event")
}
 override fun onStop() {
 super.onStop()
 Log.i(TAG,"In the onStop event")
 }
 override fun onPause() {
 super.onPause()
 Log.i(TAG,"In the onPause event")
 }
 override fun onDestroy() {
 super.onDestroy()
 Log.i(TAG,"In the onDestroy event")
 }
 override fun onSaveInstanceState(outState: Bundle?) {
 super.onSaveInstanceState(outState)
 Log.i(TAG,"In the onSaveInstanceState event")
}
 override fun onRestoreInstanceState(savedInstanceState: Bundle?) {
 super.onRestoreInstanceState(savedInstanceState)
 Log.i(TAG,"In the onRestoreInstanceState event")
 }
}